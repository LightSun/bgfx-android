---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/8/23 0023 下午 9:34
---
local m = {};
require("bgfx_lua");
local func_wrap = require("func_wrap");

local function dumpInit(init_wrapper, out)
    out.type = init_wrapper.type();
    out.vendorId = init_wrapper.vendorId();
    out.deviceId = init_wrapper.deviceId();
    out.debug = init_wrapper.debug();
    out.profile = init_wrapper.profile();
    out.platformData = init_wrapper.platformData();
    out.resolution = init_wrapper.resolution();
    out.limits = init_wrapper.limits();
    return out;
end

function m.getInit()
    local self = {};
    local init = bgfx_lua.getInit();

    function self.type(val)
        return init.type(init, val);
    end
    function self.vendorId(val)
        return init.vendorId(init, val);
    end
    function self.deviceId(val)
        return init.deviceId(init, val);
    end
    function self.debug(val)
        return init.debug(init, val);
    end
    function self.profile(val)
        return init.profile(init, val);
    end
    function self.platformData()
        return init.platformData(init);
    end
    function self.resolution()
        return init.resolution(init);
    end
    function self.limits()
        return init.limits(init);
    end

    function self.dump(out)
        if(not out) then
            out = {};
        end
        return dumpInit(self, out);
    end
    return self;
end

function m.newApp(func_pre_init, func_init, func_draw, func_destroy)
    return bgfx_lua.newApp(
            func_wrap.wrapEasy(func_pre_init, "app_pre_init"),
            func_wrap.wrapEasy(func_init, "app_init"),
            func_wrap.wrapEasy(func_draw, "app_draw"),
            func_wrap.wrapEasy(func_destroy, "app_destroy")
    );
end

function m.setDebug(debugFlags)
    return bgfx_lua.setDebug(debugFlags);
end

---
--- setViewClear
---  _id: the view id
--- c_flags: clear flags
--- c_rgba: clear rgba
--- c_depth: clear depth
--- c_stencil: clear stencil
function m.setViewClear(_id, c_flags, c_rgba, c_depth, c_stencil)
    bgfx_lua.setViewClear(_id, c_flags, c_rgba, c_depth, c_stencil);
end

function m.setViewRect(_id, x, y, w, h)
    bgfx_lua.setViewRect(_id, x, y, w, h);
end

function m.touch(id)
    bgfx_lua.touch(id);
end

function m.dbgTextClear()
    bgfx_lua.dbgTextClear();
end

--- image: const char *
function m.dbgTextImage(x, y, w, h,image, pitch)
    bgfx_lua.dbgTextImage(x, y, w, h,image, pitch);
end

function m.dbgTextPrintf(x, y, attrib, format,...)
    local a = {...};
    local str = string.format(format, table.unpack(a));
    bgfx_lua.dbgTextPrintf(x, y ,attrib, str);
end

function m.frame(capture)
    bgfx_lua.frame(capture);
end

function m.getStats()
    return bgfx_lua.getStats();
end

return m;